fileUrl="https://d396qusza40orc.cloudfront.net/getdata/lecture_slides/04_01_editingTextVariables.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/GettingData/Lectures/04_01_editingTextVariables.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/getdata/lecture_slides/04_02_regularExpressions.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/GettingData/Lectures/04_02_regularExpressions.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/getdata/lecture_slides/04_03_regularExpressionsII.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/GettingData/Lectures/04_03_regularExpressionsII.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/getdata/lecture_slides/04_04_workingWithDates.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/GettingData/Lectures/04_04_workingWithDates.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/getdata/lecture_slides/04_05_dataResources.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/GettingData/Lectures/04_05_dataResources.pdf", method="curl")
library(swirl)
swirl()
cran2<-select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<-select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb=size/2^20)
mutate(cran3, size_mb=size/2^20, size_gb=size_mb/2^10)
mutate(cran3, correct_sizes=size+1000)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes=mean(size))
library(dplyr)
cran<- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package<-group_by(cran, package)
by_package
summarize(by_package, avg_bytes=mean(size))
summarize(by_package, mean(size))
?n
?n_distinct
submit()
pack_sum
quantile(pack_sum$count, probs=0.99)
filter(pack_sum, count>679)
top_counts<- filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted<- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique<- filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted<- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res<- gather(students2,sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
student3
students3
submit()
?spread()
?spread
submit()
extract_numeric("class5")
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed<-mutate(passed, status="passed")
failed<-mutate(failed, status="failed")
packageVersion('dplyr')
bind_rows(passed, failed)
sat
?select
submit()
submit()
submit()
submit()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(packahe=lubridate)
help(package=lubridate)
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment<- now()
this_moment
hour(this_moment)
my_date <- ymd("1989_05_17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment<- update (this_moment, hours=11, minutes=53)
this_moment
nyc<- now(tz='America/New_York')
nyc
depart<- nyc+days(2)
depart
depart<-update(depart, hours=17, minutes=34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive, tzone="Asia/Hong_Kong")
arrive
last_time<- mdy("June 17, 2008")
last_time<- mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long(last_time, arrive)
how_long<- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
?c()
?t()
?colnames()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
library(swirl)
swirl()
library(nlme)
library(lattice)
xyplot(weight~Time | Diet, Bodyweight)
xyplot(weight~Time | Diet, BodyWeight)
?nlme
?splom
?trellis.par.set
?par
library(dataset)
library(datasets)
data(airquality)
str(airquality)
library(ggplot2)
qplot(votes, rating, data=movies)
qplot(votes, rating, data=movies, smooth="loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data=movies)
qplot(votes, rating, data = movies, panel = panel.loess)
library(swirl)
swirl()
bye()
swirl()
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col='red', pch="8", main="Big Apple Data")
xyplot(Ozone~Wind, data=airquality, pch=8,col="red", main="Big Apple Data")
xyplot(Ozone~Wind |as.factor(Month), data=airquality,layout=c(5,1))
xyplot(Ozone~Wind |Month, data=airquality,layout=c(5,1))
p<-xyplot(Ozone~Wind, data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("mylabels.R")
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat|color*cut, data=diamonds, strip=FALSE, pch=20, xlab="myxlab", ylab="myylab", main="mymain")
xyplot(price~carat|color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat|color*cut, data=diamonds, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
str(mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color="drv")
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("points", "smooth"))
qplot(displ, hwy, data=mpg, color=drv, geom=c("point", "smooth"))
qplot(ywy, data=mpg, color=drv)
qplot(hwy, data=mpg, color=drv)
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg,facets= .~drv)
qplot(hwy, data=mpg, facets=drv~., binwidth=2)
qplot(displ,hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv, method="loess")
g<-ggplot(mpg, aes=(displ,hwy))
g<-ggplot(mpg, aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet.grid=.~drv
g+geom_point()+geom_smooth(method="lm")+facet.grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(size=4, alpha=1/2, aes(color=drv))
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(ea)
g+geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family="Times")
plot(myx, myy, type='l', ylim=c(-3,3))
g<-ggplot(testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(mpg, aes(x=displ, y=hwy), color=factor(year))
g<-ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
axis()
?axis
?diff
?log
library(devtools)
install.packages(devtools)
install.packages("devtools")
devtools::install_github("rstudio/rmarkdown")
library(devtools)
install.packages("xtable")
getwd()
fileUrl="http://www.tug.org/twg/mactex/tutorials/ltxprimer-1.0.pdf"
download.file(fileUrl, destfile="~/Desktop/textutorial.pdf")
fileUrl="https://d3c33hcgiwev3.cloudfront.net/fwxTY0iREeWyBQ5M7ORYJQ.processed/full/540p/index.mp4?Expires=1555200000&Signature=LGlHRoAW9b-VfciT3syXNdcF9f~mXnm6SG74ki3hcUk9ptEF6bM9x8XTA5jaibSAt9c0RA9kWZ8seRIvgAQWRF51LzosK7iORmmWmMkS5fIA7~jPMijShHKM9UDqEDjaZ6fB0Ao68d8Q8Xm0NfCg8AFlpKppXFWbBsaJAsjsNbs_&Key-Pair-Id=APKAJLTNE6QMUY6HBC5A"
download.file(fileUrl, destfile="~/Documents/Translations/biofuel_water", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/repdata/slides/ReproResearch.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/Repro_research/Lectures/ReproResearch.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/repdata/slides/structureOfADataAnalysis1.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/Repro_research/Lectures/structureOfADataAnalysis1.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/repdata/slides/structureOfADataAnalysis2.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/Repro_research/Lectures/structureOfADataAnalysis2.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/repdata/slides/organizingADataAnalysis.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/Repro_research/Lectures/organizingADataAnalysis.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/repdata/slides/CodingStandard.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/Repro_research/Lectures/CodingStandard.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/repdata/slides/Markdown.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/Repro_research/Lectures/Markdown.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/repdata/slides/RMarkdown.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/Repro_research/Lectures/RMarkdown.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/repdata/slides/knitr.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/Repro_research/Lectures/knitr.pdf", method="curl")
fileUrl="https://d3c33hcgiwev3.cloudfront.net/fuv6H0iREeW_owoRfNPLWQ.processed/full/540p/index.mp4?Expires=1555200000&Signature=gQu6DjomzS1LRRPGx9gmIE08uwUytApcxI~dlDFjOCNZHQCnoYfMhtzoHfy7ceg1WbbMaPiEvycpO4ZD-V3hhFh8ZNvnCes1vC006BoX8cRw-R0yPT-0GkATVmRkpQr3-iUJAAo6JUYkEqjF0dDgXI7tFVm~CZIjKcBB5~q7osQ_&Key-Pair-Id=APKAJLTNE6QMUY6HBC5A"
download.file(fileUrl, destfile="~/Documents/Translations/biodiesel_chem_ana2.mp4", method="curl")
setwd('~/Documents//Data_science/Repro_research//Exercises/RepData_PeerAssessment1/')
data<-read.csv("activity.csv")
head(data)
avg_steps<-aggregate(steps~date,data=data,FUN=mean)
View(avg_steps)
library(dplyr)
activity<-tbl_df(data)
ave_steps<-activity%<%
group_by(date)%<%
summarise(steps,avg_steps=mean(steps))%<%
print
ave_steps<-activity%>%
group_by(date)%>%
summarise(avg_steps=mean(steps))%>%
print
hist(avg_steps)
hist?
)
hist(avg_steps$steps)
hist(avg_steps$steps, breaks=20)
range(avg_steps$steps)
hist(avg_steps$steps, breaks=70)
hist(avg_steps$steps, breaks=74)
hist(avg_steps$steps, breaks=37)
total_steps<-aggregate(steps~date,data=data,FUN=sum)
head(total_steps)
hist(total_steps$steps)
range(total_steps)
range(total_steps$steps)
hist(total_steps$steps,breaks=50)
qplot(steps, data=total_steps)
library(ggplot2)
qplot(steps, data=total_steps)
qplot(steps, data=total_steps, fill=blue)
qplot(steps, data=total_steps, fill="navy blue")
qplot(steps, data=total_steps, fill="steelblue")
qplot(steps, data=total_steps)+theme_bw(base_family="Times")+labs(title=Histogram of the total number of steps per day, x=Steps)
qplot(steps, data=total_steps)+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")
qplot(steps, data=total_steps, color="steelblue")+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")
qplot(steps, data=total_steps)+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")+geom_histogram(fill="steelblue")
qplot(steps, data=total_steps)+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")+geom_histogram(fill="steelblue", alpha=0.7, color="black")
qplot(steps, data=total_steps)+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")+geom_histogram(fill="steelblue", alpha=0.3, color="black")
qplot(steps, data=total_steps)+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")+geom_histogram(fill="bottlegreen", alpha=0.3, color="black")
qplot(steps, data=total_steps)+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")+geom_histogram(fill="bottle green", alpha=0.3, color="black")
qplot(steps, data=total_steps)+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")+geom_histogram(fill="darkgreen", alpha=0.3, color="black")
qplot(steps, data=total_steps)+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")+geom_histogram(fill="darkgreen", alpha=0.9, color="black")
qplot(steps, data=total_steps)+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")+geom_histogram(fill="darkgreen", alpha=0.9, color="black", binwidth=1)
qplot(steps, data=total_steps)+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")+geom_histogram(fill="darkgreen", color="black")
qplot(steps, data=total_steps)+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")+geom_histogram(binwidth=350)
qplot(steps, data=total_steps)+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")
qplot(steps, data=total_steps)+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")+geom_histogram(fill="gray", color="black")
qplot(steps, data=total_steps)+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")+geom_histogram(fill="gray", color="darkgray")
qplot(steps, data=total_steps)+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")+geom_histogram(fill="gray", color="darkgray", binwidth=0.5)
qplot(steps, data=total_steps)+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")+geom_histogram(fill="gray", color="darkgray", binwidth=350)
qplot(steps, data=total_steps, binwidth=350)+theme_bw(base_family="Times")+labs(title="Histogram of the total number of steps per day")+geom_histogram(fill="gray", color="darkgray")
g<-ggplot(total_steps, aes(steps))
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times")+labs(title="Total number of steps per day")
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", size=3)+labs(title="Total number of steps per day")
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=10)+labs(title="Total number of steps per day")
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day")
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day", vjust=0.5)
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day", vjust=1.5)
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day")+theme(plot.title=element_text(vjust=1.5))
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day", x="Number of steps",y="Number of occurence")+theme(plot.title=element_text(vjust=1.5))
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day", x="Number of steps",y="Number of occurence")+theme(plot.title=element_text(vjust=1.5), plot.xlab=element_text(vjust(-1.5)))
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day", x="Number of steps",y="Number of occurence")+theme(plot.title=element_text(vjust=1.5), plot.axis.x=element_text(vjust(-1.5)))
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day", x="Number of steps",y="Number of occurence")+theme(plot.title=element_text(vjust=1.5), axis.title.x=element_text(vjust(-1.5)))
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day", x="Number of steps",y="Number of occurence")+theme(plot.title=element_text(vjust=1.5), axis.title.x=element_text(vjust=-1.5))
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day", x="Number of steps",y="Number of occurence")+theme(plot.title=element_text(vjust=1.5), axis.title.x=element_text(vjust=-1))
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day", x="Number of steps",y="Number of occurence")+theme(plot.title=element_text(vjust=1.5), axis.title.x=element_text(vjust=-0.75)
)
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day", x="Number of steps",y="Number of occurence")+theme(plot.title=element_text(vjust=1.5), axis.title.x=element_text(vjust=-0.6))
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day", x="Number of steps",y="Number of occurence")+theme(plot.title=element_text(vjust=1.5), axis.title.x=element_text(vjust=-0.6), axis.title.y=element_text(hjust=-0.5))
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day", x="Number of steps",y="Number of occurence")+theme(plot.title=element_text(vjust=1.5), axis.title.x=element_text(vjust=-0.6), axis.title.y=element_text(hjust=-0.2))
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day", x="Number of steps",y="Number of occurence")+theme(plot.title=element_text(vjust=1.5), axis.title.x=element_text(vjust=-0.6), axis.title.y=element_text(vjust=-0.2))
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day", x="Number of steps",y="Number of occurence")+theme(plot.title=element_text(vjust=1.5), axis.title.x=element_text(vjust=-0.6), axis.title.y=element_text(vjust=0.2))
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day", x="Number of steps",y="Number of occurence")+theme(plot.title=element_text(vjust=1.5), axis.title.x=element_text(vjust=-0.6), axis.title.y=element_text(vjust=0.5))
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Total number of steps per day", x="Number of steps")+theme(plot.title=element_text(vjust=1.5), axis.title.x=element_text(vjust=-0.2), axis.title.y=element_text(vjust=0.75))
g+geom_histogram(fill="gray", color="darkgray", binwidth=350)+theme_bw(base_family="Times", base_size=14)+labs(title="Frequency of the total number of steps per day", x="Number of steps")+theme(plot.title=element_text(vjust=1.5), axis.title.x=element_text(vjust=-0.2), axis.title.y=element_text(vjust=0.75))
mean_step<-with(total_steps,mean(steps)
)
mean_step<-with(total_steps,mean(steps))
mean_step2<-mean(total_steps$steps)
median?
)
?median
test<-mean(total_steps$steps, na.rm=TRUE)
med<-median(total_steps$steps, na.rm=TRUE)
med
mean_step
summary(total_steps)
head(data)
steps_by_interval<-aggregate(steps~interval,data=data,FUN=mean)
head(steps_by_interval)
avg_interval<-activity%>%
group_by(interval)%>%
summarise(avg_steps=mean(steps))
avg_interval
avg_interval<-activity%>%
mutate(int=as.factor(interval))%>%
group_by(int)%>%
summarise(avg_steps=mean(steps))
avg_interval
test<-mutate(activity, int=as.factor(interval))
test
ggplot(steps_by_interval, aes(interval, steps))+geom_line()
max(steps_by_interval$steps)
ggplot(steps_by_interval, aes(interval, steps))+geom_line()+labs(title="Average daily activity pattern", x="5-min interval",y="Average number of steps")
ggplot(steps_by_interval, aes(interval, steps))+geom_line()+labs(title="Average daily activity pattern", x="5-min interval",y="Average number of steps")+theme_gray(base_family="Times")
ggplot(steps_by_interval, aes(interval, steps))+geom_line()+labs(title="Average daily activity pattern", x="5-min interval",y="Average number of steps")+theme_gray(base_family="Times")+theme(plot.title=element_text(vjust=1.5))
plot(steps_by_interval$interval,steps_by_interval$steps,type="l")
ggplot(steps_by_interval, aes(interval, steps))+geom_line()+labs(title="Average daily activity pattern", x="5-min interval",y="Average number of steps")+theme_gray(base_family="Times")+theme(plot.title=element_text(vjust=1.5))
ggplot(steps_by_interval, aes(interval, steps))+geom_line()+labs(title="Average daily activity pattern", x="5-min interval",y="Average number of steps")+theme_bw(base_family="Times")+theme(plot.title=element_text(vjust=1.5))
tail(steps_by_interval)
View(data)
View(activity)
int<-seq(0,1440,by=5)
int<-seq(0,1435,by=5)
data_test<-cbind(data, int)
View(data_test)
steps_test<-aggregate(steps~int, data=data_test, FUN=mean)
ggplot(steps_test, aes(int,steps))+geom_line()
View(data)
?formatC
rm(activity)
àctivity<-cbind(data, int)
missing<-activity[is.na(activity),]
summary(activity)
View(`àctivity`)
maxi<-max(steps_by_interval$steps)
maxi_int<-steps_by_interval[steps==maxi,]
maxi_int<-steps_by_interval[steps_by_interval$steps==maxi,]
maxi_int
?xtable
library(xtable)
?xtable
data<-read.csv("activity.csv")
int<-seq(0,1435,by=5)
activity<-cbind(data, int)
total_steps<-aggregate(steps~date,data=activity,FUN=sum)
library(ggplot2)
mean_step<-mean(total_steps$steps, na.rm=TRUE)
med<-median(total_steps$steps, na.rm=TRUE)
steps_by_interval<-aggregate(steps~int,data=activity,FUN=mean)
missing<-activity[is.na(activity),]
nb<-nrow(missing)
new_data<-merge(missing,steps_by_interval, by.x=int, by.y=int)
new_data<-merge(missing,steps_by_interval)
?rm
rm(new_data)
new_data<-merge(missing,steps_by_interval, by.x=steps, by.y=steps)
new_data<-merge(missing,steps_by_interval, by.x="steps", by.y="steps")
rm("new_data")
new_data<-merge(missing,steps_by_interval, "int")
head(new_data)
View(new_data)
View(steps_by_interval)
tail(new_data)
new_data<-filter(new_data, -interval)
library(dplyr)
new_data<-filter(new_data, -interval)
new_data<-dplyr::filter(new_data, -interval)
new_data<-select(new_data, -interval)
View(new_data)
summary(new_data)
View(missing)
full_data<-merge(new_data,activity,"date")
rm(full_data)
View(activity)
activity<-select(activity, -interval)
View(activity)
class(activity$date)
full_data<-merge(new_data,activity,"date")
View(full_data)
rm(full_data)
full_data<-merge(new_data,activity)
View(full_data)
rm(full_data)
full_data<-merge(new_data,activity,"int","date")
View(full_data)
rm(full_data)
full_data<-merge(new_data,activity,"date","int")
rm(full_data)
new_data<-select(new_data,-steps.x)
View(new_data)
new_data$date<-as.Date(new_data$date, "%Y-%m-%d")
activity$date<-as.Date(activity$date, "%Y-%m-%d")
merge(activity,new_data, "date")
nomissing<-activity[!is.na(activity),]
head(missing)
head(nomissing)
View(nomissing)
tail(nomissing)
rm(nomissing)
complete<-filter(activity,!is.na(steps))
full_data<-rbind(complete,new_data)
new_data<-rename(new_data,steps=steps.y)
full_data<-rbind(complete,new_data)
View(full_data)
full_data<-arrange(full_data,date,int)
View(full_data)
print(full_data)
full_data
full_data<-tbl_df(full_data)
full_data
full_data<-mutate(full_data,day=weekdays(date))
head(full_data)
for (i in 1:nrow(full_data)){
if (full_data$day[i] %in% c("Monday","Tuesday","Wednesday","Thursday","Friday")){
full_data$day[i]<-"Weekday"
}else{
full_data$day[i]<-"Weekend"
}
}
head(full_data)
tail(full_data)
print(full_data[1439:1460,])
?factor
full_data<-mutate(full_data,day=factor(day))
full_steps<-full_data%>%
group_by(day,int)%>%
summarise(avg_steps=mean(steps))
head(full_steps)
ggplot(full_steps, aes(int,avg_steps))+geom_line()+facets_grid(day~.)
ggplot(full_steps, aes(int,avg_steps))+geom_line()+facet_grid(day~.)
ggplot(full_steps, aes(int,avg_steps))+geom_line()+facet_grid(day~.)+theme_gray(base_family="Times", base_size=10)+labs(title="Comparison of the daily activiy patterns on weekdays and weekend", x="Time(min)", y="Average number of steps")+ theme(plot.title=element_text(vjust=1.5))
ggplot(full_steps, aes(int,avg_steps))+geom_line()+facet_grid(day~.)+theme_gray(base_family="Times", base_size=10)+labs(title="Comparison of the daily activity patterns on weekdays and weekends", x="Time(min)", y="Average number of steps")+ theme(plot.title=element_text(vjust=1.5), strip.text.y=element_text(size=12))
ggplot(full_steps, aes(int,avg_steps))+geom_line()+facet_grid(day~.)+theme_bw(base_family="Times", base_size=10)+labs(title="Comparison of the daily activity patterns on weekdays and weekends", x="Time(min)", y="Average number of steps")+ theme(plot.title=element_text(vjust=1.5), strip.text.y=element_text(size=12))
?unzip
unzip(~/"activity.zip")
