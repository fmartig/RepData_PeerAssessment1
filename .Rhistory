flag_shapes <- flags[, 19:23]
lappy(flag_shapes, range)
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, unique, character(1))
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replace=TRUE, prob= c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob=0.7)
flips2 <- rbinom(100, size=1, prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans (my_pois)
hist(cm)
d1 <- Syst.Date()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2<- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()- t1
difftime(Sys.time(), t1, units='days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x= cars$speed, y=cars$dist)
plot(x= cars$dist, y=cars$speed)
plot(x= cars$speed, y=cars$dist)
plot(x= cars$speed, y=cars$dist, xlab= "Speed")
plot(x= cars$speed, y=cars$dist, xlab= "Speed", ylab="Stopping Distance")
plot(x= cars$speed, y=cars$dist, ylab="Stopping Distance")
plot(x= cars$speed, y=cars$dist, xlab= "Speed", ylab="Stopping Distance")
plot(cars, main="My Plot")
plot(cars, sub="My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim=c(10,15))
plot(cars, pch=2)
data(mtcars)
play()
str(mtcars)
nxt()
?boxplot
boxplot(formula= mpg~cyl, data=mtcars)
hist(mtcars$mpg)
library(XML)
fileUrl <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse (fileUrl, useInternal=TRUE)
fileUrl2<- sub("https", "http", fileUrl)
doc <- xmlTreeParse (fileUrl2, useInternal=TRUE)
rootNode <- xmlToot(doc)
rootNode <- xmlRoot(doc)
zip <- xpathSApply (rootNode, "//zipcode", xmlValue)
length (zip[zip==21231])
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile= "~/Documents/Data_science/GettingData/Exercises/houseIdaho.csv", method="curl")
install.packages (data.table)
library (data.table)
install.packages("data.table")
library (data.table)
?fread
DT<- fread ("~/Documents/Data_science/GettingData/Exercises/houseIdaho.csv")
system.time (rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
system.time (mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time (tapply(DT$pwgtp15,DT$SEX,mean))
system.time (sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time (DT[,mean(pwgtp15),by=SEX])
system.time (mean(DT$pwgtp15,by=DT$SEX))
install.packages("RMySQL")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library (httr)
myapp = oauth_app("github", key="8285689bedebb86c23f1", secret="9cc9afae749c4389be750eec5f2e030d07dbdebe")
github_token = oauth2.0_token (oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
myapp = oauth_app("github", key="8285689bedebb86c23f1", secret="9cc9afae749c4389be750eec5f2e030d07dbdebe")
github_token = oauth2.0_token (oauth_endpoints("github"), myapp, cache=FALSE)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
myapp = oauth_app("github", key="8285689bedebb86c23f1", secret="9cc9afae749c4389be750eec5f2e030d07dbdebe")
github_token = oauth2.0_token (oauth_endpoints("github"), myapp, cache=FALSE)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
myapp = oauth_app("github", key="8285689bedebb86c23f1", secret="9cc9afae749c4389be750eec5f2e030d07dbdebe")
github_token = oauth2.0_token (oauth_endpoints("github"), myapp, cache=FALSE)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
install.packages("httpuv")
myapp = oauth_app("github", key="8285689bedebb86c23f1", secret="9cc9afae749c4389be750eec5f2e030d07dbdebe")
github_token = oauth2.0_token (oauth_endpoints("github"), myapp, cache=FALSE)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
raw<-content(req)
raw$created_at
library(jsonlite)
?fromJSON
cont = jsonlite::fromJSON(toJSON(raw))
head(cont)
cont[6,1:34]
cont[6,35:68]
fileUrl="https://d396qusza40orc.cloudfront.net/getdata/lecture_slides/03_01_subsettingAndSorting.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/GettingData/Lectures/03_01_subsettingAndSorting.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/getdata/lecture_slides/03_02_summarizingData.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/GettingData/Lectures/03_02_summarizingData.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/getdata/lecture_slides/03_03_creatingNewVariables.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/GettingData/Lectures/03_03_creatingNewVariables.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/getdata/lecture_slides/03_04_reshapingData.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/GettingData/Lectures/03_04_reshapingData.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/getdata/lecture_slides/dplyr_intro.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/GettingData/Lectures/dplyr_intro.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/getdata/lecture_slides/dplyr_demo.pdf.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/GettingData/Lectures/dplyr_demo.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/getdata/lecture_slides/03_05_mergingData.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/GettingData/Lectures/03_05_mergingData.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/getdata/lecture_slides/04_01_editingTextVariables.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/GettingData/Lectures/04_01_editingTextVariables.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/getdata/lecture_slides/04_02_regularExpressions.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/GettingData/Lectures/04_02_regularExpressions.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/getdata/lecture_slides/04_03_regularExpressionsII.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/GettingData/Lectures/04_03_regularExpressionsII.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/getdata/lecture_slides/04_04_workingWithDates.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/GettingData/Lectures/04_04_workingWithDates.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/getdata/lecture_slides/04_05_dataResources.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/GettingData/Lectures/04_05_dataResources.pdf", method="curl")
library(swirl)
swirl()
cran2<-select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<-select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb=size/2^20)
mutate(cran3, size_mb=size/2^20, size_gb=size_mb/2^10)
mutate(cran3, correct_sizes=size+1000)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes=mean(size))
library(dplyr)
cran<- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package<-group_by(cran, package)
by_package
summarize(by_package, avg_bytes=mean(size))
summarize(by_package, mean(size))
?n
?n_distinct
submit()
pack_sum
quantile(pack_sum$count, probs=0.99)
filter(pack_sum, count>679)
top_counts<- filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted<- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique<- filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted<- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res<- gather(students2,sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
student3
students3
submit()
?spread()
?spread
submit()
extract_numeric("class5")
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed<-mutate(passed, status="passed")
failed<-mutate(failed, status="failed")
packageVersion('dplyr')
bind_rows(passed, failed)
sat
?select
submit()
submit()
submit()
submit()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(packahe=lubridate)
help(package=lubridate)
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment<- now()
this_moment
hour(this_moment)
my_date <- ymd("1989_05_17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment<- update (this_moment, hours=11, minutes=53)
this_moment
nyc<- now(tz='America/New_York')
nyc
depart<- nyc+days(2)
depart
depart<-update(depart, hours=17, minutes=34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive, tzone="Asia/Hong_Kong")
arrive
last_time<- mdy("June 17, 2008")
last_time<- mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long(last_time, arrive)
how_long<- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
?c()
?t()
?colnames()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
library(swirl)
swirl()
library(nlme)
library(lattice)
xyplot(weight~Time | Diet, Bodyweight)
xyplot(weight~Time | Diet, BodyWeight)
?nlme
?splom
?trellis.par.set
?par
library(dataset)
library(datasets)
data(airquality)
str(airquality)
library(ggplot2)
qplot(votes, rating, data=movies)
qplot(votes, rating, data=movies, smooth="loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data=movies)
qplot(votes, rating, data = movies, panel = panel.loess)
library(swirl)
swirl()
bye()
swirl()
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col='red', pch="8", main="Big Apple Data")
xyplot(Ozone~Wind, data=airquality, pch=8,col="red", main="Big Apple Data")
xyplot(Ozone~Wind |as.factor(Month), data=airquality,layout=c(5,1))
xyplot(Ozone~Wind |Month, data=airquality,layout=c(5,1))
p<-xyplot(Ozone~Wind, data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("mylabels.R")
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat|color*cut, data=diamonds, strip=FALSE, pch=20, xlab="myxlab", ylab="myylab", main="mymain")
xyplot(price~carat|color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat|color*cut, data=diamonds, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
str(mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color="drv")
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("points", "smooth"))
qplot(displ, hwy, data=mpg, color=drv, geom=c("point", "smooth"))
qplot(ywy, data=mpg, color=drv)
qplot(hwy, data=mpg, color=drv)
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg,facets= .~drv)
qplot(hwy, data=mpg, facets=drv~., binwidth=2)
qplot(displ,hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv, method="loess")
g<-ggplot(mpg, aes=(displ,hwy))
g<-ggplot(mpg, aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet.grid=.~drv
g+geom_point()+geom_smooth(method="lm")+facet.grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(size=4, alpha=1/2, aes(color=drv))
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(ea)
g+geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family="Times")
plot(myx, myy, type='l', ylim=c(-3,3))
g<-ggplot(testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(mpg, aes(x=displ, y=hwy), color=factor(year))
g<-ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
axis()
?axis
?diff
?log
library(devtools)
install.packages(devtools)
install.packages("devtools")
devtools::install_github("rstudio/rmarkdown")
library(devtools)
install.packages("xtable")
getwd()
fileUrl="http://www.tug.org/twg/mactex/tutorials/ltxprimer-1.0.pdf"
download.file(fileUrl, destfile="~/Desktop/textutorial.pdf")
fileUrl="https://d3c33hcgiwev3.cloudfront.net/fwxTY0iREeWyBQ5M7ORYJQ.processed/full/540p/index.mp4?Expires=1555200000&Signature=LGlHRoAW9b-VfciT3syXNdcF9f~mXnm6SG74ki3hcUk9ptEF6bM9x8XTA5jaibSAt9c0RA9kWZ8seRIvgAQWRF51LzosK7iORmmWmMkS5fIA7~jPMijShHKM9UDqEDjaZ6fB0Ao68d8Q8Xm0NfCg8AFlpKppXFWbBsaJAsjsNbs_&Key-Pair-Id=APKAJLTNE6QMUY6HBC5A"
download.file(fileUrl, destfile="~/Documents/Translations/biofuel_water", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/repdata/slides/ReproResearch.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/Repro_research/Lectures/ReproResearch.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/repdata/slides/structureOfADataAnalysis1.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/Repro_research/Lectures/structureOfADataAnalysis1.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/repdata/slides/structureOfADataAnalysis2.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/Repro_research/Lectures/structureOfADataAnalysis2.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/repdata/slides/organizingADataAnalysis.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/Repro_research/Lectures/organizingADataAnalysis.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/repdata/slides/CodingStandard.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/Repro_research/Lectures/CodingStandard.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/repdata/slides/Markdown.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/Repro_research/Lectures/Markdown.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/repdata/slides/RMarkdown.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/Repro_research/Lectures/RMarkdown.pdf", method="curl")
fileUrl="https://d396qusza40orc.cloudfront.net/repdata/slides/knitr.pdf"
download.file(fileUrl, destfile="~/Documents/Data_science/Repro_research/Lectures/knitr.pdf", method="curl")
fileUrl="https://d3c33hcgiwev3.cloudfront.net/fuv6H0iREeW_owoRfNPLWQ.processed/full/540p/index.mp4?Expires=1555200000&Signature=gQu6DjomzS1LRRPGx9gmIE08uwUytApcxI~dlDFjOCNZHQCnoYfMhtzoHfy7ceg1WbbMaPiEvycpO4ZD-V3hhFh8ZNvnCes1vC006BoX8cRw-R0yPT-0GkATVmRkpQr3-iUJAAo6JUYkEqjF0dDgXI7tFVm~CZIjKcBB5~q7osQ_&Key-Pair-Id=APKAJLTNE6QMUY6HBC5A"
download.file(fileUrl, destfile="~/Documents/Translations/biodiesel_chem_ana2.mp4", method="curl")
setwd("~/Documents//Data_science/Repro_research//Exercises/RepData_PeerAssessment1/")
data<-read.csv("activity.csv", headings=TRUE)
data<-read.csv("activity.csv")
head(data)
summary(data)
class(data$head)
class(data$date)
class(data$interval)
library(lubridate)
new_date<-ymd(data$date)
new_date
class(new_date)
library(dplyr)
activity<-tbl_df(data)
mutate(activity,day=ymd(date))
activity
activity2<-mutate(activity,day=ymd(date))
fdata<-select(activity2,-date)
fdata
View(fdata)
data$date<-as.Date(data$date,"%Y%m%d")
head(data)
data<-read.csv("activity.csv")
data$date<-as.Date(strptime(data$date, format="%Y%m%d"))
head(data)
data<-read.csv("activity.csv")
head(data)
data$date<-as.Date(strptime(data$date, format="%Y-%m-%d"))
head(data)
class(data$date)
data<-read.csv("activity.csv")
data$date<-as.Date(data$date,"%Y-%m-%d")
head(data)
class(data$date)
summary(data)
missing_values<-data[is.na(data),]
View(missing_values)
NAnumber<-nrow(missing_values)
NAnumber
